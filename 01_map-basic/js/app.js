document.addEventListener('DOMContentLoaded', function() {
    var gData
    var URL = "13Xd93PIiGvGh2JQ6uygnsUTTLAlJu7F7TE-doTy-5OY"
    Tabletop.init({ 
        key: URL, 
        callback: showInfo, 
        simpleSheet: true 
    })
})

function showInfo(gData) {
	//Initialize map
    var map = Sheetsee.loadMap("map");
    // Add a basemap. We can set that with plain Leaflet
    var stamenToner = L.tileLayer('http://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}.png', {
        attribution: 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);

// What attribute data do we want from our spreadsheet? Use the column name!
    var optionsJSON = ["rowNumber", "name", "icon", "city", "type"]
    // Let's turn our spreadsheet into GeoJSON so we can add it to a map!
    var geoJSON = Sheetsee.createGeoJSON(gData, optionsJSON)
    // This isn't necessary, but it will let you look at the GeoJSON generated by Sheetsee!
    console.log(geoJSON);
    // create a template for the popup
    var template = "<div>{{name}}<br><img src='{{icon}}' /><br>{{city}}<br>{{type}}</div>"
    // use sheetsee addMarkerLayer to bring in the GeoJSon, add it to the map, and then bind the template to the popup
    var markerLayer = Sheetsee.addMarkerLayer(geoJSON, map, template);
}